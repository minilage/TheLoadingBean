@page "/register"
@using TheLoadingBean.Shared.DTOs
@using TheLoadingBean.Client.Services
@using MudBlazor
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<MudContainer MaxWidth="MaxWidth.Small" Class="mt-16">
    <MudCard>
        <MudCardContent>
            <MudText Typo="Typo.h4" Align="Align.Center" GutterBottom="true">Registrera</MudText>
            <EditForm Model="@registerDto" OnValidSubmit="HandleRegister">
                <DataAnnotationsValidator />
                <MudTextField T="string" @bind="registerDto.FirstName" Label="Förnamn" Required="true" RequiredError="Förnamn är obligatoriskt" />
                <MudTextField T="string" @bind="registerDto.LastName" Label="Efternamn" Required="true" RequiredError="Efternamn är obligatoriskt" />
                <MudTextField T="string" @bind="registerDto.Email" Label="Email" Required="true" RequiredError="Email är obligatoriskt" />
                <MudTextField T="string" @bind="registerDto.Phone" Label="Telefon" Required="true" RequiredError="Telefon är obligatoriskt" />
                <MudTextField T="string" @bind="registerDto.Address" Label="Adress" Required="true" RequiredError="Adress är obligatoriskt" />
                <MudTextField T="string" @bind="registerDto.Password" Label="Lösenord" Required="true" RequiredError="Lösenord är obligatoriskt" InputType="InputType.Password" />
                <MudTextField T="string" @bind="registerDto.ConfirmPassword" Label="Bekräfta lösenord" Required="true" RequiredError="Bekräfta lösenord är obligatoriskt" InputType="InputType.Password" />
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" Class="mt-4">Registrera</MudButton>
            </EditForm>
            <MudText Align="Align.Center" Class="mt-4">
                Har du redan ett konto? <MudLink Href="/login">Logga in här</MudLink>
            </MudText>
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {
    private RegisterDto registerDto = new();

    private async Task HandleRegister()
    {
        try
        {
            var token = await AuthService.RegisterAsync(registerDto);

            if (!string.IsNullOrWhiteSpace(token?.Token))
            {
                Snackbar.Add("Registrering lyckades!", Severity.Success);
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                Snackbar.Add("Registrering misslyckades", Severity.Error);
            }
        }
        catch
        {
            Snackbar.Add("Ett fel uppstod vid registrering", Severity.Error);
        }
    }
} 