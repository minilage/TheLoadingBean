@using MudBlazor
@using TheLoadingBean.Shared.DTOs
@using Microsoft.AspNetCore.Components
@inject ICartService CartService

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">@Product.Name</MudText>
    </TitleContent>
    <DialogContent>
        <MudGrid>
            <MudItem xs="12" sm="6">
                <img src="@Product.ImageUrl" alt="@Product.Name" class="product-image mb-3" style="width:100%; border-radius:10px;" />
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudText Typo="Typo.body1">@Product.Description</MudText>
                <MudText Typo="Typo.subtitle2" Class="mt-2">Price: @Product.Price kr</MudText>
                <MudText Typo="Typo.subtitle2">Category: @Product.Category</MudText>
                <MudText Typo="Typo.subtitle2">Available: @(Product.IsAvailable ? "Yes" : "No")</MudText>
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="AddToCart" Color="Color.Secondary">Add to Cart</MudButton>
        <MudButton OnClick="CloseDialog" Color="Color.Primary">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] public IMudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public ProductDto Product { get; set; } = new();

    private async Task AddToCart()
    {
        await CartService.AddToCartAsync(Product.Id);
        MudDialog.Close(DialogResult.Ok(true));
    }

    private void CloseDialog()
    {
        MudDialog.Cancel();
    }
}